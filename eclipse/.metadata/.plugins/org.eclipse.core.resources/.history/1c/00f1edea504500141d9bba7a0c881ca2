package woop;

import net.minecraft.block.Block;
import net.minecraft.init.Blocks;
import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.Mod.EventHandler;
import cpw.mods.fml.common.ModClassLoader;
import cpw.mods.fml.common.event.FMLInitializationEvent;
import cpw.mods.fml.common.registry.GameRegistry;
import cpw.mods.fml.common.registry.LanguageRegistry;
import net.minecraft.item.*;
import net.minecraft.world.WorldType;

@Mod(modid = WoopMod.MODID, version = WoopMod.VERSION)
public class WoopMod {
	public static final String MODID = "WoopMod";
	public static final String VERSION = "Ver. 0";

	public static WorldType Biosphere;
	
	@EventHandler
	public void Init(FMLInitializationEvent event) {
		// some example code
		//System.out.println("DIRT BLOCK >> " + Blocks.dirt.getUnlocalizedName());

		//GameRegistry.addShapelessRecipe(new ItemStack(Blocks.diamond_block), new ItemStack(Blocks.dirt));

		LanguageRegistry.instance().addStringLocalization("generator.biosphere", "Biospheres");
		Biosphere = new BiosphereGenerator("biosphere");
	}
	
	public static Block ParseBlock(String blockNameOrId)
	{
		try
		{
			int id = Integer.parseInt(blockNameOrId);
			return Block.getBlockById(id);
		}
		catch(Exception ignore)
		{
			return Block.getBlockFromName(blockNameOrId);
		}
	}
	
	public static String GetNameOrIdForBlock(Block block)
	{
		if (block == null) { return "air"; }
		
		String ret = null;
		
		try
		{
			ret = Block.blockRegistry.getNameForObject(block);
		}
		catch(Exception ignore)
		{ /* do nothing */ }
		
		if (ret == null || ret.length() < 1)
		{
			ret = Integer.toString(Block.getIdFromBlock(block));
		}
		
		return ret;
	}
	
}
