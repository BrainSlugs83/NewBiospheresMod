package woop;

import java.util.LinkedList;

import akka.japi.Creator;
import akka.japi.Predicate;

import com.sun.org.apache.bcel.internal.generic.PUSH;

import woop.BiosphereGen.SphereChunk;

public class LruCacheList<T>
{
	private LinkedList<T> _backingList = new LinkedList<T>();

	public synchronized void Push(T object)
	{
		_backingList.remove(object);
		_backingList.push(object);
	}
	
	public synchronized T FindOrAdd(Predicate<T> predicate, Creator<T> creator)
	{

	
	}
	
	
	
	
	public synchronized SphereChunk GetSphereChunk(int chunkX, int chunkZ)
	{
		boolean first = true;
		for (SphereChunk chunk: chunks)
		{
			if (chunk != null)
			{
				if (chunk.chunkX == chunkX && chunk.chunkZ == chunkZ)
				{
					if (!first)
					{
						// move element to the front of the list
						chunks.remove(chunk);
						chunks.push(chunk);
					}

					return chunk;
				}
			}

			first = false;
		}

		SphereChunk chunk = new SphereChunk(this.world, this.worldSeed, chunkX, chunkZ);

		chunks.push(chunk);
		while (chunks.size() > 10)
		{
			chunks.removeLast();
		}

		return chunk;
	}
	
}
